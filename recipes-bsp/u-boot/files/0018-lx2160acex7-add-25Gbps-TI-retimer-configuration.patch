From cfbd17f352654d8413992c19abccbcf73fa6627d Mon Sep 17 00:00:00 2001
From: Rabeeh Khoury <rabeeh@solid-run.com>
Date: Wed, 28 Oct 2020 19:24:35 +0200
Subject: [PATCH 18/26] lx2160acex7: add 25Gbps TI retimer configuration

ClearFog CX revision 1.3 and newer adds two TI 4 channels retimers on
egress and ingress.
On egress the retimer is configured to be on I2C address 0x22 and the
other on I2C address 0x23.

This patch configures the egress retimer pre and post key and the
amplitude.

Signed-off-by: Rabeeh Khoury <rabeeh@solid-run.com>
---
 board/solidrun/lx2160a/eth_lx2160acex7.c | 110 +++++++++++++++++------
 include/configs/lx2160acex7.h            |   2 +-
 2 files changed, 85 insertions(+), 27 deletions(-)

diff --git a/board/solidrun/lx2160a/eth_lx2160acex7.c b/board/solidrun/lx2160a/eth_lx2160acex7.c
index 97e414838fd9..f335b4207a62 100644
--- a/board/solidrun/lx2160a/eth_lx2160acex7.c
+++ b/board/solidrun/lx2160a/eth_lx2160acex7.c
@@ -12,6 +12,7 @@
 #include <miiphy.h>
 #include <phy.h>
 #include <fm_eth.h>
+#include <i2c.h>
 #include <asm/io.h>
 #include <exports.h>
 #include <asm/arch/fsl_serdes.h>
@@ -20,6 +21,65 @@
 
 DECLARE_GLOBAL_DATA_PTR;
 
+int select_i2c_ch_pca9547(u8 ch);
+
+void setup_retimer_25g(int chnum)
+{
+	int i, ret;
+	u8 reg;
+	struct udevice *dev;
+
+	select_i2c_ch_pca9547(0xb); /* SMB_CLK / DATA interface */
+	/*
+	 * Assumption is that LX2 TX --> RT1 RX is at 0x22 and
+	 * RT2 TX --> LX2 RX is at 0x23.
+	 */
+	ret = i2c_get_chip_for_busnum(0, 0x23, 1, &dev);
+	if (ret) {
+		/*
+		 * On HoneyComb and ClearFog CX ver 1.1 / 1.2 there is no retimer
+		 * assembled; silently return.
+		 */
+		return;
+	}
+	ret = dm_i2c_read(dev, 0xf1, &reg, 1); /* Get full device ID */
+	if (ret) {
+		printf ("ERROR: Could not get retimer device ID\n");
+		return;
+	}
+	if (reg != 0x10) {
+		printf ("ERROR : DS250DF410 retimer not found\n");
+		return;
+	}
+	printf ("Found retimer... Setting up channels 0..%d as 25Gbps\n",chnum - 1);
+	dm_i2c_reg_write(dev, 0xff, 0x1); /* Enable channel specific access */
+	/*
+	 * Setup 25Gbps channel on 0..chnum.
+	 * Notice that the ingress retimer is mirrorly mapped with the SERDES
+	 * number, so SERDES #0 is connected to channel #3, SERDES 1 to channel
+	 * #2 ...
+	 */
+	for (i = 0 ; i < chnum; i++) { /* Setup channels 0..chnum as 25g */
+		dm_i2c_reg_write(dev, 0xfc, 1 << i);
+		dm_i2c_reg_write(dev, 0x00, 0x4); /* Reset channel registers */
+		dm_i2c_reg_write(dev, 0x0a, 0xc); /* Assert CDR reset */
+
+		printf ("Setting main cursor to 0xf\n");
+		dm_i2c_reg_write(dev, 0x3d, 0x8f); /* Enable pre/post and set main cursor to 0xf */
+		dm_i2c_reg_write(dev, 0x3e, 0x44); /* Set pre-cursor to -4 */
+		if (i == 0)
+			/* Set post-cursor of channel #0 to -4 */
+			dm_i2c_reg_write(dev, 0x3f, 0x44);
+		else
+			/* Set all other channels pre-cursor to -1 */
+			dm_i2c_reg_write(dev, 0x3f, 0x41);
+		printf ("Releasing CDR\n");
+		dm_i2c_reg_write(dev, 0x0a, 0x00); /* Release CDR */
+	}
+
+	/* TODO: Setup other channels as 10Gbps */
+}
+
 int board_eth_init(bd_t *bis)
 {
 #if defined(CONFIG_FSL_MC_ENET)
@@ -45,35 +105,33 @@ int board_eth_init(bd_t *bis)
 			      RGMII_PHY_ADDR1);
 	reg = (struct memac_mdio_controller *)CONFIG_SYS_FSL_WRIOP1_MDIO2;
 	switch (srds_s1) {
-	case 3:
-	case 5:
-	case 8:
-	case 13:
-	case 14:
-	case 15:
-	case 17:
-	case 20:
-	case 23:
-		wriop_set_phy_address(WRIOP1_DPMAC17, 0,
-				      RGMII_PHY_ADDR1);
-		break;
-
-	default:
+		case 13:
+		case 14:
+		case 15:
+		case 16:
+		case 17:
+		case 21:
+			/* Setup 25gb retimer on lanes e,f,g,h */
+			setup_retimer_25g(4);
+			break;
+		case 18:
+		case 19:
+			/* Setup 25gb retimer on lanes e,f and 10g on g,h */
+			setup_retimer_25g(2);
+			break;
+
+		default:
 		printf("SerDes1 protocol 0x%x is not supported on LX2160ACEX7\n",
 		       srds_s1);
-		goto next;
 	}
-	for (i = WRIOP1_DPMAC17; i <= WRIOP1_DPMAC17; i++) {
-		interface = wriop_get_enet_if(i);
-		switch (interface) {
-		case PHY_INTERFACE_MODE_RGMII:
-		case PHY_INTERFACE_MODE_RGMII_ID:
-			dev = miiphy_get_dev_by_name(DEFAULT_WRIOP_MDIO1_NAME);
-			wriop_set_mdio(i, dev);
-			break;
-		default:
-			break;
-		}
+	wriop_set_phy_address(WRIOP1_DPMAC17, 0,
+			      RGMII_PHY_ADDR1);
+	interface = wriop_get_enet_if(WRIOP1_DPMAC17);
+	switch (interface) {
+	case PHY_INTERFACE_MODE_RGMII:
+	case PHY_INTERFACE_MODE_RGMII_ID:
+		dev = miiphy_get_dev_by_name(DEFAULT_WRIOP_MDIO1_NAME);
+		wriop_set_mdio(WRIOP1_DPMAC17, dev);
 	}
 
 next:
diff --git a/include/configs/lx2160acex7.h b/include/configs/lx2160acex7.h
index 310168db47d3..de075eaeaaba 100644
--- a/include/configs/lx2160acex7.h
+++ b/include/configs/lx2160acex7.h
@@ -11,7 +11,7 @@
 /*#define CONFIG_SYS_FSL_ESDHC_USE_PIO*/
 /* VID */
 
-#define I2C_MUX_CH_VOL_MONITOR		0x2
+#define I2C_MUX_CH_VOL_MONITOR		0xa /* Channel 2 */
 /* Voltage monitor on channel 2*/
 #define I2C_VOL_MONITOR_ADDR		0x5c
 #define I2C_VOL_MONITOR_BUS_V_OFFSET	0x2
-- 
2.30.2

